---
import LanguageSwitcher from './LanguageSwitcher.tsx'
import MobileNavigation from './MobileNavigation.tsx'
import Logo from './Logo.astro'
import { getLangFromUrl, useTranslations } from '../utils/i18n'

// Get language from URL path
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<nav 
  id="navbar" 
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-500 ease-out bg-white/90 backdrop-blur-xl border-b border-neutral-200/60"
  role="navigation" 
  aria-label={lang === 'ar' ? 'التنقل الرئيسي' : 'Main navigation'}
>
  <!-- Navigation progress indicator -->
  <div id="nav-progress" class="absolute bottom-0 left-0 h-0.5 bg-gradient-to-r from-[#07D580] to-[#047C46] transition-all duration-300 ease-out" style="width: 0%"></div>
  
  <div class="container-custom">
    <div class="flex items-center justify-between h-20">
      <!-- Logo & Brand -->
      <div class="flex items-center">
        <a 
          href={`/${lang}/`} 
          class="relative inline-block"
          aria-label={lang === 'ar' ? 'الصفحة الرئيسية - أركوم' : 'Home - Arcom'}
        >
          <Logo 
            variant="green"
            size="lg"
            showText={false}
            lang={lang}
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center">
        <nav class="flex items-center space-x-1 rtl:space-x-reverse" role="menubar">
          <a 
            href={`/${lang}/`} 
            class="nav-link-premium" 
            role="menuitem"
            data-nav="home"
          >
            <span class="nav-text">{t('nav.home')}</span>
            <div class="nav-indicator"></div>
          </a>
          <a 
            href={`/${lang}/#about`} 
            class="nav-link-premium" 
            role="menuitem"
            data-nav="about"
          >
            <span class="nav-text">{t('nav.about')}</span>
            <div class="nav-indicator"></div>
          </a>
          <a 
            href={`/${lang}/#services`} 
            class="nav-link-premium" 
            role="menuitem"
            data-nav="services"
          >
            <span class="nav-text">{t('nav.services')}</span>
            <div class="nav-indicator"></div>
          </a>
          <a 
            href={`/${lang}/#contact`} 
            class="nav-link-premium" 
            role="menuitem"
            data-nav="contact"
          >
            <span class="nav-text">{t('nav.contact')}</span>
            <div class="nav-indicator"></div>
          </a>
        </nav>
        
        <!-- Language Switcher -->
        <div class="ml-8 rtl:ml-0 rtl:mr-8 pl-8 rtl:pl-0 rtl:pr-8 border-l rtl:border-l-0 rtl:border-r border-neutral-300/60">
          <div class="relative">
            <LanguageSwitcher client:load />
          </div>
        </div>
      </div>

      <!-- Mobile Navigation -->
      <div class="lg:hidden">
        <MobileNavigation lang={lang} client:load />
      </div>
    </div>
  </div>
</nav>

<script>
// Simple scroll effects only
document.addEventListener('DOMContentLoaded', function() {
  const navbar = document.getElementById('navbar');
  const progressBar = document.getElementById('nav-progress');
  let lastScrollY = window.scrollY;
  
  function updateScrollProgress() {
    const scrollTop = window.scrollY;
    const docHeight = document.documentElement.scrollHeight - window.innerHeight;
    const scrollPercent = (scrollTop / docHeight) * 100;
    
    if (progressBar) {
      progressBar.style.width = Math.min(scrollPercent, 100) + '%';
    }
  }
  
  function updateNavbar() {
    const currentScrollY = window.scrollY;
    
    if (navbar) {
      if (currentScrollY > 20) {
        navbar.classList.add('bg-white/95', 'shadow-lg');
        navbar.classList.remove('bg-white/90');
      } else {
        navbar.classList.remove('bg-white/95', 'shadow-lg');
        navbar.classList.add('bg-white/90');
      }
    }
    
    lastScrollY = currentScrollY;
  }
  
  let ticking = false;
  
  function handleScroll() {
    updateScrollProgress();
    
    if (!ticking) {
      requestAnimationFrame(updateNavbar);
      ticking = true;
      setTimeout(() => { ticking = false; }, 10);
    }
  }
  
  window.addEventListener('scroll', handleScroll, { passive: true });
});
</script>

<style>
  /* PROFESSIONAL NAVIGATION STYLES */
  
  /* Desktop Navigation Links */
  .nav-link-premium {
    position: relative;
    display: inline-flex;
    align-items: center;
    font-weight: 500;
    font-size: 0.95rem;
    color: var(--color-neutral-700);
    text-decoration: none;
    padding: 1rem 1.5rem;
    border-radius: 1rem;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }
  
  .nav-link-premium:hover {
    background: rgba(7, 213, 128, 0.08); /* Mint Green with opacity */
    color: #047C46; /* Deep Green */
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(4, 124, 70, 0.15); /* Deep Green shadow */
  }
  
  .nav-link-premium:hover .nav-indicator {
    width: 80%;
    background: linear-gradient(90deg, #07D580, #71F5E6); /* Mint Green to Aqua Mint */
  }
  
  .nav-link-premium:active {
    transform: translateY(0);
    transition-duration: 0.1s;
  }
  
  .nav-link-premium.active {
    color: #047C46;
  }
  
  .nav-text {
    position: relative;
    z-index: 2;
  }
  
  .nav-indicator {
    position: absolute;
    bottom: 0.5rem;
    left: 50%;
    width: 0;
    height: 3px;
    background: linear-gradient(90deg, #07D580, #047C46);
    border-radius: 3px;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateX(-50%);
  }
  
  .nav-link-premium.active .nav-indicator {
    width: 60%;
  }
  

  
  /* Enhanced Focus States */
  .nav-link-premium:focus-visible {
    outline: 2px solid #07D580;
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba(7, 213, 128, 0.2);
  }
  
  /* RTL Enhancements */
  [dir="rtl"] .nav-indicator {
    right: 50%;
    left: auto;
    transform: translateX(50%);
  }
  
  /* Reduced Motion Support */
  @media (prefers-reduced-motion: reduce) {
    .nav-link-premium {
      transition-duration: 0.01ms !important;
    }
    
    .nav-link-premium::before {
      display: none;
    }
  }
  
  /* High Contrast Mode */
  @media (prefers-contrast: high) {
    .nav-link-premium {
      border: 1px solid currentColor;
    }
  }
</style> 