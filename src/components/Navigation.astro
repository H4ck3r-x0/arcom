---
import LanguageSwitcher from './LanguageSwitcher.tsx'
import { getLangFromUrl, useTranslations } from '../utils/i18n'

// Get language from URL path
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<nav id="navbar" class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 bg-white/95 backdrop-blur-md border-b border-white/20 shadow-sm">
  <div class="container-custom">
    <div class="flex items-center justify-between h-20">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={`/${lang}/`} class="flex items-center space-x-3 rtl:space-x-reverse logo-animate">
          <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-primary-600 rounded-xl flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
            </svg>
          </div>
          <span class="text-xl font-bold text-gradient">{t('common.shortName')}</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8 rtl:space-x-reverse">
        <a href={`/${lang}/`} class="nav-link text-neutral-700 hover:text-primary-600">{t('nav.home')}</a>
        <a href={`/${lang}/#about`} class="nav-link text-neutral-700 hover:text-primary-600">{t('nav.about')}</a>
        <a href={`/${lang}/#services`} class="nav-link text-neutral-700 hover:text-primary-600">{t('nav.services')}</a>
        <a href={`/${lang}/#contact`} class="nav-link text-neutral-700 hover:text-primary-600">{t('nav.contact')}</a>
      </div>

      <!-- Right Side Actions -->
      <div class="flex items-center space-x-4 rtl:space-x-reverse">
        <LanguageSwitcher client:load />
        <a href={`/${lang}/#contact`} class="btn btn-primary hidden sm:inline-flex">
          {t('hero.cta.primary')}
        </a>
        
        <!-- Mobile Menu Button -->
        <button id="mobile-menu-button" class="md:hidden p-2 rounded-lg text-neutral-700 hover:text-primary-600 hover:bg-primary-50 transition-colors">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="md:hidden fixed inset-0 top-20 bg-white/95 backdrop-blur-xl transform translate-x-full transition-transform duration-300 ease-in-out z-40">
    <div class="flex flex-col h-full">
      <div class="flex-1 px-6 py-8 space-y-6">
        <a href={`/${lang}/`} class="block text-xl font-medium text-neutral-700 hover:text-primary-600 py-3 border-b border-neutral-100 mobile-nav-link">
          {t('nav.home')}
        </a>
        <a href={`/${lang}/#about`} class="block text-xl font-medium text-neutral-700 hover:text-primary-600 py-3 border-b border-neutral-100 mobile-nav-link">
          {t('nav.about')}
        </a>
        <a href={`/${lang}/#services`} class="block text-xl font-medium text-neutral-700 hover:text-primary-600 py-3 border-b border-neutral-100 mobile-nav-link">
          {t('nav.services')}
        </a>
        <a href={`/${lang}/#contact`} class="block text-xl font-medium text-neutral-700 hover:text-primary-600 py-3 border-b border-neutral-100 mobile-nav-link">
          {t('nav.contact')}
        </a>
      </div>
      
      <div class="px-6 py-6 border-t border-neutral-200">
        <a href={`/${lang}/#contact`} class="btn btn-primary w-full justify-center">
          {t('hero.cta.primary')}
        </a>
      </div>
    </div>
  </div>
</nav>

<script>
// Navbar scroll effect
const navbar = document.getElementById('navbar');
const mobileMenuButton = document.getElementById('mobile-menu-button');
const mobileMenu = document.getElementById('mobile-menu');
const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

// Handle scroll effects
let lastScrollY = window.scrollY;

function updateNavbar() {
  const currentScrollY = window.scrollY;
  
  if (navbar) {
    if (currentScrollY > 50) {
      // Scrolled down - solid background
      navbar.classList.remove('bg-white/95');
      navbar.classList.add('bg-white', 'shadow-lg');
    } else {
      // At top - transparent background
      navbar.classList.remove('bg-white', 'shadow-lg');
      navbar.classList.add('bg-white/95');
    }
    
    // Hide/show navbar on scroll
    if (currentScrollY > lastScrollY && currentScrollY > 100) {
      // Scrolling down
      navbar.style.transform = 'translateY(-100%)';
    } else {
      // Scrolling up
      navbar.style.transform = 'translateY(0)';
    }
  }
  
  lastScrollY = currentScrollY;
}

// Throttled scroll handler
let ticking = false;
function handleScroll() {
  if (!ticking) {
    requestAnimationFrame(() => {
      updateNavbar();
      ticking = false;
    });
    ticking = true;
  }
}

window.addEventListener('scroll', handleScroll);

// Mobile menu toggle
if (mobileMenuButton && mobileMenu) {
  mobileMenuButton.addEventListener('click', () => {
    const isOpen = !mobileMenu.classList.contains('translate-x-full');
    
    if (isOpen) {
      // Close menu
      mobileMenu.classList.add('translate-x-full');
      document.body.classList.remove('overflow-hidden');
    } else {
      // Open menu
      mobileMenu.classList.remove('translate-x-full');
      document.body.classList.add('overflow-hidden');
    }
  });
}

// Close mobile menu when clicking on links
mobileNavLinks.forEach(link => {
  link.addEventListener('click', () => {
    if (mobileMenu) {
      mobileMenu.classList.add('translate-x-full');
      document.body.classList.remove('overflow-hidden');
    }
  });
});

// Close mobile menu when clicking outside
document.addEventListener('click', (e) => {
  if (mobileMenu && !mobileMenu.contains(e.target) && !mobileMenuButton?.contains(e.target)) {
    mobileMenu.classList.add('translate-x-full');
    document.body.classList.remove('overflow-hidden');
  }
});

// Handle smooth scrolling for anchor links
document.querySelectorAll('a[href*="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    const href = this.getAttribute('href');
    if (href && href.includes('#')) {
      const hashIndex = href.indexOf('#');
      const hash = href.substring(hashIndex);
      
      if (hash && hash !== '#') {
        e.preventDefault();
        const target = document.querySelector(hash);
        if (target) {
          const offsetTop = target.offsetTop - 80; // Account for fixed navbar
          window.scrollTo({
            top: offsetTop,
            behavior: 'smooth'
          });
        }
      }
    }
  });
});

// Initialize navbar state
updateNavbar();
</script>

<style>
/* Enhanced mobile menu animation */
#mobile-menu {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
}

/* Ensure proper z-index stacking */
#navbar {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
}

/* Mobile menu button animation */
#mobile-menu-button {
  transition: all 0.2s ease;
}

#mobile-menu-button:hover {
  transform: scale(1.05);
}

/* Navigation link hover effects */
.nav-link {
  position: relative;
  transition: all 0.3s ease;
}

.nav-link::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(to right, var(--color-primary-500), var(--color-primary-600));
  transition: width 0.3s ease;
}

.nav-link:hover::after {
  width: 100%;
}

/* Mobile nav link animations */
.mobile-nav-link {
  transition: all 0.3s ease;
  transform: translateX(0);
}

.mobile-nav-link:hover {
  transform: translateX(8px);
  background: linear-gradient(to right, transparent, var(--color-primary-50));
}
</style> 